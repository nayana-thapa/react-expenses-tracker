{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseList.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseFilter","value","selected","onChange","event","onFilter","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","expense","date","getMonth","amount","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","title","ExpenseList","items","length","pushedExpense","id","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSave","type","min","step","onClick","onCancel","NewExpense","addExpense","setAddExpense","enteredExpenses","random","newExpense","dummyData","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c63c5bd.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = (props) => {\n  const classes = 'card ' + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from \"react\";\nimport \"./ExpenseFilter.css\";\n\nconst ExpenseFilter = (props) => {\n  const changeFilterHandler = (event) => {\n    props.onFilter(event.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={changeFilterHandler}>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpenseFilter;\n","import React from \"react\";\n\nimport \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\nimport \"./Chart.css\";\nimport ChartBar from \"./ChartBar\";\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n  const totalMaximum  = Math.max(...dataPointValues);\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport Chart from '../Chart/Chart'\n\nconst ExpensesChart = props => {\n const chartDataPoints = [\n { label: 'Jan', value: 0 },\n { label: 'Feb', value: 0 },\n { label: 'Mar', value: 0 },\n { label: 'Apr', value: 0 },\n { label: 'May', value: 0 },\n { label: 'Jun', value: 0 },\n { label: 'Jul', value: 0 },\n { label: 'Aug', value: 0 },\n { label: 'Sep', value: 0 },\n { label: 'Oct', value: 0 },\n { label: 'Nov', value: 0 },\n { label: 'Dec', value: 0 },\n];\n for (const expense of props.expenses) {\n     const expenseMonth = expense.date.getMonth();\n     chartDataPoints[expenseMonth].value += expense.amount;\n }  \n return <Chart dataPoints = {chartDataPoints} />\n};\n\nexport default ExpensesChart;","import React from 'react';\n\nimport './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__month'>{month}</div>\n      <div className='expense-date__year'>{year}</div>\n      <div className='expense-date__day'>{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React from \"react\";\n\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\nimport \"./ExpenseItem.css\";\n\nconst ExpenseItem = (props) => {\n  return (\n    <li>\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date} />\n      <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n        <div className=\"expense-item__price\">Rs {props.amount}</div>\n      </div>\n    </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import React from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpenseList.css\";\n\nconst ExpenseList = (props) => {\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\"> No expense found!</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((pushedExpense) => (\n        <ExpenseItem\n          key={pushedExpense.id}\n          title={pushedExpense.title}\n          amount={pushedExpense.amount}\n          date={pushedExpense.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpenseList;\n","import React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport ExpenseList from \"./ExpenseList\";\nimport \"./Expenses.css\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(2020);\n\n  const filterHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n  return (\n    <Card className=\"expenses\">\n      <ExpenseFilter selected={filteredYear} onFilter={filterHandler} />\n      <ExpensesChart expenses = {filteredExpenses}/>\n      <ExpenseList items={filteredExpenses} />)\n    </Card>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\n\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n    props.onSave(expenseData);\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.00\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2020-01-31\"\n            max=\"2021-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__actions\">\n          <button type=\"button\" onClick={props.onCancel}>\n            Cancel\n          </button>\n\n          <button type=\"submit\">Add Expense</button>\n        </div>\n      </div>\n    </form>\n  );\n};\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\n\nimport \"./NewExpense.css\";\n\nconst NewExpense = (props) => {\n  const [ addExpense, setAddExpense ]= useState(false);\n\n  const saveExpenseHandler = () => {\n    setAddExpense(true);\n  }\n\n  const stopExpenseHandler = () => {\n    setAddExpense(false);\n  }\n\n\n  const expenseDataHandler = (enteredExpenses) => {\n    const expenseData = {\n      ...enteredExpenses,\n      id: Math.random().toString(),\n    };\n    props.newExpense(expenseData);\n  };\n  return (\n    <div className=\"new-expense\">\n      {!addExpense && <button onClick={saveExpenseHandler}>Add Expense</button>}\n      {addExpense && <ExpenseForm onSave={expenseDataHandler}  onCancel = {stopExpenseHandler} />}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst dummyData = [\n  {\n    id: \"e1\",\n    title: \"Electricity Bill\",\n    amount: 4000,\n    date: new Date(2019, 11, 12),\n  },\n  {\n    id: \"e2\",\n    title: \"Big Basket\",\n    amount: 7500,\n    date: new Date(2019, 11, 5),\n  },\n  {\n    id: \"e3\",\n    title: \"Rent\",\n    amount: 50000,\n    date: new Date(2020, 9, 10),\n  },\n  {\n    id: \"e4\",\n    title: \"Water Bill\",\n    amount: 1000,\n    date: new Date(2021, 9, 3),\n  },\n];\nconst App = () => {\n  const [expenses, setExpenses] = useState(dummyData);\n\n  const newExpenseHandler = (pushedExpense) => {\n    setExpenses((prevExpenses) => {\n      return [pushedExpense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense newExpense={newExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}